+ set -euo pipefail
+ RED='\033[0;31m'
+ GREEN='\033[0;32m'
+ YELLOW='\033[1;33m'
+ BLUE='\033[0;34m'
+ NC='\033[0m'
+ for cmd in valgrind gdb readelf jq
+ command -v valgrind
+ for cmd in valgrind gdb readelf jq
+ command -v gdb
+ for cmd in valgrind gdb readelf jq
+ command -v readelf
+ for cmd in valgrind gdb readelf jq
+ command -v jq
+ '[' 2 -lt 2 ']'
+ EXE=./minishell
+ INPUT=input_trace_log.txt
+ shift 2
+ EXTRA_ARGS=("$@")
+ '[' '!' -x ./minishell ']'
+ '[' '!' -f input_trace_log.txt ']'
+ has_debug=false
+ command -v readelf
+ readelf --sections ./minishell
+ grep -q '\.debug_info'
+ echo -e '\033[0;32m‚úÖ Debug symbols d√©tect√©s dans l'\''ex√©cutable.\033[0m'
[0;32m‚úÖ Debug symbols d√©tect√©s dans l'ex√©cutable.[0m
+ has_debug=true
+ mkdir -p .debug_combined
+ VG_LOG=.debug_combined/valgrind.log
+ GDB_LOG=.debug_combined/gdb_combined.log
+ SUMMARY_JSON=summary.json
+ REPORT_HTML=report.html
+ echo -e '\n\033[0;34m=== 1. Lancement de Valgrind ===\033[0m'

[0;34m=== 1. Lancement de Valgrind ===[0m
+ valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=.debug_combined/valgrind.log timeout 15s ./minishell
+ echo -e '\n\033[0;34m=== 2. Extraction d'\''un emplacement suspect ===\033[0m'

[0;34m=== 2. Extraction d'un emplacement suspect ===[0m
+ suspect_location=
+ '[' -f .debug_combined/valgrind.log ']'
++ awk '
        /Invalid read|Invalid write|Conditional jump/ {flag=1}
        flag {print}
        /^$/ && flag {exit}
    ' .debug_combined/valgrind.log
++ head -n 80
+ ERR_BLOCK=
+ echo ''
+ grep -qE ' at [^:]+:[0-9]+'
++ echo ''
++ grep -oE '[a-zA-Z_][a-zA-Z0-9_]* *\('
++ head -n1
++ sed 's/ *(//'
+ func=
