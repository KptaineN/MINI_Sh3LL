[BUILD] key=<<, handler=0x402c00
build_t_arr_dic_str: [0] key='<<', value=0x402c00
[BUILD] key=>>, handler=0x402c21
build_t_arr_dic_str: [1] key='>>', value=0x402c21
[BUILD] key=&&, handler=0x402c42
build_t_arr_dic_str: [2] key='&&', value=0x402c42
[BUILD] key=||, handler=0x402c63
build_t_arr_dic_str: [3] key='||', value=0x402c63
[BUILD] key=|, handler=0x402c84
build_t_arr_dic_str: [4] key='|', value=0x402c84
[BUILD] key=<, handler=0x402ca5
build_t_arr_dic_str: [5] key='<', value=0x402ca5
[BUILD] key=>, handler=0x402cc6
build_t_arr_dic_str: [6] key='>', value=0x402cc6
[BUILD] key=echo, handler=0x40324c
build_t_arr_dic_str: [0] key='echo', value=0x40324c
[BUILD] key=cd, handler=0x403271
build_t_arr_dic_str: [1] key='cd', value=0x403271
[BUILD] key=pwd, handler=0x403296
build_t_arr_dic_str: [2] key='pwd', value=0x403296
[BUILD] key=export, handler=0x4032bb
build_t_arr_dic_str: [3] key='export', value=0x4032bb
[BUILD] key=unset, handler=0x4032e0
build_t_arr_dic_str: [4] key='unset', value=0x4032e0
[BUILD] key=env, handler=0x403305
build_t_arr_dic_str: [5] key='env', value=0x403305
[BUILD] key=exit, handler=0x40332a
build_t_arr_dic_str: [6] key='exit', value=0x40332a
ft_echo=0x40324c ft_cd=0x403271 ft_pwd=0x403296 ft_export=0x4032bb ft_unset=0x4032e0 ft_env=0x403305 ft_exit=0x40332a
ᕕ( ᐛ )ᕗ minishell$ pwd
count_args_cmd: arr[0] = "pwd"
[DEBUG] attribute_token_type: token 'pwd' has 1 args
[DEBUG] attribute_cmd_subtokens: len = 1, idx = 0
[DEBUG] attribute_token_type: new_i = 1, i = 0
[expand_cmd] argv[0] = 'pwd'
DEBUG handler=0x403296 idx=2
[CALL] handler=0x403296 for pwd
/home/kiefer/Documents/42/minishell/v3/MINI_Sh3LL/v4
count_args_cmd: arr[0] = "pwd"
[DEBUG] attribute_token_type: token 'pwd' has 1 args
[DEBUG] attribute_cmd_subtokens: len = 1, idx = 0
[DEBUG] attribute_token_type: new_i = 1, i = 0
[DEBUG] free_tokens 138: freeing part 0 of token 'pwd'
[DEBUG] free_tokens: freeing part 0 of token 'pwd' (p: 0x2b360f40, val: pwd)
[DEBUG] free_tokens 140: freed part 0 of token 'pwd'
[DEBUG] free_tokens 144: freed parts of token 'pwd'
[DEBUG] free_tokens 148: freed cmd_args_parts of token 'pwd'
[DEBUG] free_tokens 155: freed all tokens
ᕕ( ᐛ )ᕗ minishell$ ls
$GDB_LOG
debug_minishell_with_tester.sh
gdb_commands.txt
include
lasttest.sh
Makefile
minishell
minishell_tester
obj
SRC
test_commands.txt
test_output.log
test_parser
test_split
count_args_cmd: arr[0] = "ls"
[DEBUG] attribute_token_type: token 'ls' has 1 args
[DEBUG] attribute_cmd_subtokens: len = 1, idx = 0
[DEBUG] attribute_token_type: new_i = 1, i = 0
[DEBUG] free_tokens 138: freeing part 0 of token 'ls'
[DEBUG] free_tokens: freeing part 0 of token 'ls' (p: 0x2b3610d0, val: ls)
[DEBUG] free_tokens 140: freed part 0 of token 'ls'
[DEBUG] free_tokens 144: freed parts of token 'ls'
[DEBUG] free_tokens 148: freed cmd_args_parts of token 'ls'
[DEBUG] free_tokens 155: freed all tokens
ᕕ( ᐛ )ᕗ minishell$ echo "Hello World"

count_args_cmd: arr[0] = "echo"
count_args_cmd: arr[1] = ""Hello World""
[DEBUG] attribute_token_type: token 'echo' has 2 args
[DEBUG] attribute_cmd_subtokens: len = 2, idx = 0
[DEBUG] attribute_token_type: new_i = 2, i = 0
[expand_cmd] argv[0] = 'echo'
[expand_cmd] argv[1] = 'Hello World'
DEBUG handler=0x40324c idx=0
[CALL] handler=0x40324c for echo
[DEBUG] echo argv[0]=echo
[DEBUG] echo argv[1]=Hello World
[DEBUG] argv[1]=Hello World
[ECHO DEBUG] quand i = 1 l11  argv[0]=echo, argv[1]=Hello World
count_args_cmd: arr[0] = "echo"
count_args_cmd: arr[1] = ""Hello World""
[DEBUG] attribute_token_type: token 'echo' has 2 args
[DEBUG] attribute_cmd_subtokens: len = 2, idx = 0
[DEBUG] attribute_token_type: new_i = 2, i = 0
[DEBUG] free_tokens 138: freeing part 0 of token 'echo'
[DEBUG] free_tokens: freeing part 0 of token 'echo' (p: 0x2b361570, val: echo)
[DEBUG] free_tokens 140: freed part 0 of token 'echo'
[DEBUG] free_tokens 144: freed parts of token 'echo'
[DEBUG] free_tokens 138: freeing part 0 of token 'echo'
[DEBUG] free_tokens: freeing part 0 of token 'echo' (p: 0x2b3615b0, val: Hello Worl)
[DEBUG] free_tokens 140: freed part 0 of token 'echo'
[DEBUG] free_tokens 144: freed parts of token 'echo'
[DEBUG] free_tokens 148: freed cmd_args_parts of token 'echo'
[DEBUG] free_tokens 155: freed all tokens
ᕕ( ᐛ )ᕗ minishell$ exit
