

/*

?????????????????????????????????????

 implÃ©menter dans export.c
ðŸ”¹ Fonction principale

int	ft_export(t_env **env_list, char **args);

    env_list â†’ pointeur vers la liste des variables dâ€™environnement

    args â†’ tableau des arguments (args[0] = "export", args[1] = "VAR=42", etc.)

ðŸ”§ Ã‰tapes pour ft_export

    Si args[1] est NULL â†’ afficher lâ€™environnement (print_export)

    Sinon â†’ pour chaque args[i] :

        VÃ©rifie que câ€™est un identifiant valide (ex: pas 1abc=val)

        Si = prÃ©sent :

            si la variable existe â†’ mettre Ã  jour value

            sinon â†’ ajouter nouvelle variable

        Si pas de = â†’ crÃ©er la variable avec valeur NULL si elle nâ€™existe pas

ðŸ”¨ Fonctions utiles Ã  coder

void	print_export(t_env *env);
int		is_valid_identifier(const char *str);
void	add_or_update_env(t_env **env, const char *key, const char *value);
char	*get_key(const char *str);
char	*get_value(const char *str);

ðŸ§ª Exemples

export
â†’ declare -x PATH="/usr/bin"
  declare -x USER="noe"

export NEWVAR=hello
â†’ ajoute NEWVAR

export PATH=/new/path
â†’ remplace la valeur
*/